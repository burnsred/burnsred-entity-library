import exact from"prop-types-exact";import PropTypes from"prop-types";import PropTypesEntity from"@gnowth/prop-types-entity";import PropTypesImmutable from"react-immutable-proptypes";import PropTypesPlus from"@gnowth/prop-types-plus";import React from"react";import _isFunction from"lodash/fp/isFunction";import _compose from"lodash/fp/compose";import _getOr from"lodash/fp/getOr";import{List,Map as Map$1}from"immutable";import _isObjectLike from"lodash/fp/isObjectLike";import{connect}from"react-redux";import _isFunction$1 from"lodash/isFunction";import _isString from"lodash/isString";function _defineProperty(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function _extends(){return(_extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(e[r]=o[r])}return e}).apply(this,arguments)}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{},r=Object.keys(o);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(o).filter(function(e){return Object.getOwnPropertyDescriptor(o,e).enumerable}))),r.forEach(function(t){_defineProperty(e,t,o[t])})}return e}function _objectWithoutPropertiesLoose(e,t){if(null==e)return{};var o,r,p={},n=Object.keys(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||(p[o]=e[o]);return p}function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,p=_objectWithoutPropertiesLoose(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(p[o]=e[o])}return p}const _React$createContext=React.createContext({}),Provider=_React$createContext.Provider,Consumer=_React$createContext.Consumer,_React$createContext2=React.createContext({defaultComponents:{},defaultWidgets:{}}),DefaultProvider=_React$createContext2.Provider,DefaultConsumer=_React$createContext2.Consumer,withForm=e=>(function(t){return React.createElement(FormConsumer,null,o=>React.createElement(e,_extends({},o,t)))}),withFormDefault=e=>(function(t){return React.createElement(FormDefaultConsumer,null,o=>React.createElement(e,_extends({},o,t)))}),FormConsumer=Consumer,FormProvider=e=>{let t=e.children,o=_objectWithoutProperties(e,["children"]);return React.createElement(Provider,{value:o},t)};FormProvider.propTypes=exact({children:PropTypes.node.isRequired,formDisabled:PropTypes.bool,formField:PropTypesEntity.field.isRequired,formIndex:PropTypes.number,formInitialValue:PropTypesImmutable.map,formName:PropTypesPlus.string,formNameMapper:PropTypes.shape({}),formOnChange:PropTypes.func.isRequired,formReadOnly:PropTypes.bool,formValue:PropTypes.oneOfType([PropTypesImmutable.map,PropTypesImmutable.list]).isRequired}),FormProvider.defaultProps={formDisabled:!1,formIndex:void 0,formInitialValue:null,formName:void 0,formNameMapper:{},formReadOnly:!1};const FormDefaultConsumer=DefaultConsumer,FormDefaultProvider=e=>{let t=e.children,o=_objectWithoutProperties(e,["children"]);return React.createElement(DefaultProvider,{value:o},t)};FormDefaultProvider.propTypes=exact({children:PropTypes.node.isRequired,defaultComponents:PropTypes.shape({label:PropTypesPlus.component,query:PropTypesPlus.component}),defaultWidgets:PropTypes.objectOf(PropTypesPlus.component.isRequired)}),FormDefaultProvider.defaultProps={defaultComponents:{},defaultWidgets:{}};var withPropMapper=e=>t=>(function(o){return React.createElement(t,_extends({},o,e(o)))}),withPropTypes=({displayName:e,propTypes:t,defaultProps:o}={})=>r=>{const p=e=>React.createElement(r,e);return p.propTypes=t,p.defaultProps=o,p.displayName=`withPropTypes-${e}`,p};function withState({initialState:e={},mapProps:{state:t="state",setState:o="setState"}={}}){return r=>(class extends React.Component{constructor(...t){super(...t),_defineProperty(this,"state",_isFunction(e)?e(this.props):e),_defineProperty(this,"mounted",!0)}componentWillUnmount(){this.mounted=!1}render(){const e=Object.assign({},this.props,{[t]:this.state,[o]:(...e)=>this.mounted&&this.setState(...e)});return React.createElement(r,e)}})}function withInput(e){class t extends React.Component{constructor(...e){super(...e),_defineProperty(this,"handleChange",({target:e})=>{const t=e.getAttribute?e.getAttribute("index")||void 0:e.index,o=this.getProps(),r=this.props.willChangeRecord({value:o.value,field:o.field,nextRecord:e.name?this.props.formValue.setIn(void 0===t?[e.name]:[e.name,t],o.field.clean(e.value)):this.props.formValue.merge(e.value),nextValue:e.value,record:this.props.formValue});return this.props.formOnChange({target:{index:this.props.formIndex,name:this.props.formName,value:r}})})}getProps(){return Object.assign({},this.props,{disabled:this.props.disabled,index:this.props.index,name:this.props.name||this.props.formName,onChange:this.handleChange,readOnly:this.props.readOnly,value:this.props.formField.getValue(this.props.formValue,{name:this.props.name}),field:this.props.formField.getField({name:this.props.name}),initialValue:this.props.formInitialValue,options:List()})}renderComponent(t){return React.createElement(e,t)}renderQuery(e){return React.createElement(this.props.queryComponent,{action:({search:t})=>e.field.entity.duck.get({params:Map$1({search:t}).merge(this.props.filterParams)})},t=>this.renderComponent(_objectSpread({},e,{onInputChange:t.onInputChange,processing:t.processing,processingDidFail:t.processingDidFail,options:t.value})))}render(){return this.props.apiOptions?this.renderQuery(this.getProps()):this.renderComponent(this.getProps())}}return t.propTypes={apiOptions:PropTypes.bool,filterParams:PropTypesImmutable.map,formField:PropTypesEntity.entityField.isRequired,queryComponent:PropTypesPlus.isRequiredIf("apiOptions",PropTypesPlus.component),willChangeRecord:PropTypes.func},t.defaultProps={apiOptions:!1,filterParams:Map$1(),queryComponent:void 0,willChangeRecord:({nextRecord:e})=>e},_compose(withFormDefault,withForm,withPropMapper(e=>({queryComponent:_getOr(e.defaultComponents.query)("queryComponent")(e)})))(t)}class Control extends React.Component{constructor(...e){super(...e),_defineProperty(this,"handleEvent",e=>{const t=this.props.action(_objectSpread({event:e},this.getPropsContext()));return _isObjectLike(t)&&"meta"in t&&"type"in t?this.props.setState({action:this.props.dispatch(t)}):this.props.onChange({target:{name:this.props.name,value:t}})})}getPropsContext(){return{errors:this.props.errors,field:this.props.field,initialValue:this.props.initialValue,processing:this.props.processing,processingDidFail:this.props.processingDidFail,value:this.props.value}}getProps(){return Object.assign({[this.props.event]:this.handleEvent,disabled:this.props.disabled||this.props.readOnly},_isFunction(this.props.componentProps)?this.props.componentProps(this.getPropsContext()):this.props.componentProps)}render(){return React.createElement(this.props.component,this.getProps())}}Control.propTypes={action:PropTypes.func.isRequired,component:PropTypesPlus.component.isRequired,event:PropTypes.string},Control.defaultProps={event:"onClick"};const mapStateToProps=(e,t)=>({processing:!!t.state.action&&t.state.action.meta.entity.duck.status(e,_objectSpread({},t.state.action.meta,{status:t.state.action.meta.keyProcessing})),processDidFail:!!t.state.action&&t.state.action.meta.entity.duck.status(e,_objectSpread({},t.state.action.meta,{status:t.state.action.meta.keyProcessingDidFail}))});var control=_compose(withPropTypes({displayName:"Control",propTypes:{}}),withInput,withFormDefault,withPropMapper(e=>({component:e.component||e.defaultComponents.control})),withState({initialState:{action:void 0}}),connect(mapStateToProps))(Control);class Form extends React.Component{constructor(...e){super(...e),_defineProperty(this,"handleChange",({target:e})=>this.props.onChange({target:e}))}getProps(){return{formDisabled:this.props.disabled,formField:this.props.field,formIndex:this.props.index,formInitialValue:this.props.initialValue,formName:this.props.name,formNameMapper:this.props.nameMapper,formOnChange:this.handleChange,formReadOnly:this.props.readOnly,formValue:this.props.value}}render(){return React.createElement(FormProvider,this.getProps(),React.createElement(this.props.component,this.props.componentProps,this.props.children))}}Form.propTypes={children:PropTypes.node.isRequired,component:PropTypesPlus.component,componentProps:PropTypes.shape({}),disabled:PropTypes.bool,field:PropTypesEntity.entityField.isRequired,initialValue:PropTypesImmutable.map,name:PropTypes.oneOfType([PropTypes.string.isRequired,PropTypes.arrayOf(PropTypes.string.isRequired).isRequired]),nameMapper:PropTypes.shape({}),onChange:PropTypes.func.isRequired,readOnly:PropTypes.bool,value:PropTypesImmutable.map.isRequired},Form.defaultProps={component:"div",componentProps:{},disabled:!1,initialValue:void 0,name:void 0,nameMapper:{},readOnly:!1};class Input extends React.Component{getProps(){return Object.assign({name:this.props.name,onChange:this.props.onChange,value:this.props.value},!_isString(this.props.component)&&{errors:this.props.errors,field:this.props.field,initialValue:this.props.initialValue,onInputChange:this.props.onInputChange,options:this.props.options,processing:this.props.processing,processingDidFail:this.props.processing},_isFunction$1(this.props.componentProps)?this.props.componentProps(this.props):this.props.componentProps)}renderAsComponent(e){const t=this.props.wrapperComponent||React.Fragment;return React.createElement(t,this.props.wrapperComponentProps||{},this.props.many?this.renderComponentArray(e):this.renderComponent(e))}renderComponent(e){return React.createElement(this.props.component,e)}renderComponentArray(e){return e.value.map((t,o)=>React.createElement(this.props.component,_extends({},e,{index:o,key:o,value:t})))}render(){return this.props.children?this.props.children(this.getProps()):this.renderAsComponent(this.getProps())}}Input.propTypes={children:PropTypes.func,component:PropTypesPlus.isRequiredIfNot("children",PropTypesPlus.component),componentProps:PropTypes.oneOfType([PropTypes.shape({}),PropTypes.func]),many:PropTypesPlus.notRequiredIf("children",PropTypes.bool),wrapperComponent:PropTypesPlus.isRequiredIf("wrapperComponentProps",PropTypesPlus.component),wrapperComponentProps:PropTypes.shape({})},Input.defaultProps={children:void 0,component:void 0,componentProps:{},many:void 0,wrapperComponent:void 0,wrapperComponentProps:void 0};var input=_compose(withPropTypes({displayName:"Input",propTypes:exact({apiOptions:PropTypes.bool,apiValue:PropTypes.bool,children:PropTypes.func,component:PropTypesPlus.component,componentProps:PropTypes.oneOfType([PropTypes.shape({}),PropTypes.func]),many:PropTypesPlus.notRequiredIf("children",PropTypes.bool),name:PropTypesPlus.string,type:PropTypes.string,willChangeRecord:PropTypes.func,wrapperComponent:PropTypesPlus.component,wrapperComponentProps:PropTypes.shape({})}),defaultProps:{apiOptions:!1,apiValue:!1,children:void 0,component:void 0,componentProps:{},many:void 0,name:void 0,type:void 0,willChangeRecord:({nextRecord:e})=>e,wrapperComponentProps:void 0}}),withInput,withFormDefault,withPropMapper(e=>({component:e.component||e.defaultWidgets[e.type||e.field.constructor.type],wrapperComponent:e.wrapperComponent||e.defaultComponents.wrapper})))(Input);export{control as Control,Form,input as Input,withInput,withForm,withFormDefault,FormConsumer,FormProvider,FormDefaultConsumer,FormDefaultProvider};

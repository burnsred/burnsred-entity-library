import{Duck}from"@gnowth/entity-duck";import{Map as Map$1}from"immutable";function _defineProperty(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}class ScreenDuck extends Duck{static getInitialState({entity:e}){const t=e.dataToRecord({});return Map$1({detail:t,detail_dirty:t})}static getReducers(e,t){return{[e.clear]:(e,a)=>a.meta.dirty?e.set("detail_dirty",e.get("detail")):t,[e.save]:(e,t)=>e.withMutations(e=>e.update("detail",e=>t.meta.dirty?e:t.payload).set("detail_dirty",t.payload))}}record(e,{dirty:t,id:a}={}){return e.getIn([this.app,this.constructor.namespace,this.entity.name,t?"detail_dirty":"detail"])}}_defineProperty(ScreenDuck,"namespace","screens"),_defineProperty(ScreenDuck,"actions",{clear:Duck.createAction(),get:Duck.createAction({defaultMeta:{id:null,keyClear:"clear",keyRecord:"record",keySave:"save",params:Map$1()}}),save:Duck.createAction()});export default ScreenDuck;

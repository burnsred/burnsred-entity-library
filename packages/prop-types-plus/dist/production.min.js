import PropTypes from"prop-types";import"lodash/fp/isFunction";import _isString from"lodash/fp/isString";var allOfType=(e=[])=>{const i=(...i)=>{const r=e.find(e=>e(...i));return null==r?void 0:r(...i)};return i.isRequired=((...i)=>{const r=[PropTypes.any.isRequired].concat(e).find(e=>e(...i));return null==r?void 0:r(...i)}),i},component=PropTypes.oneOfType([PropTypes.func,PropTypes.string,PropTypes.symbol]),withRequired=e=>{const i=(...i)=>e(...i);return i.isRequired=allOfType([PropTypes.any.isRequired,i]),i};const propTypeIsRequiredIf=(e,i)=>(r,...o)=>(_isString(e)?r[e]:e(r))?i.isRequired(r,...o):i(r,...o);var isRequiredIf=withRequired(propTypeIsRequiredIf);const propTypeIsRequiredIfNot=(e,i)=>(r,...o)=>(_isString(e)?r[e]:e(r))?i(r,...o):i.isRequired(r,...o);var isRequiredIfNot=withRequired(propTypeIsRequiredIfNot),isUndefined=(e,i,r)=>void 0!==e[i]&&new Error(`Invalid prop \`${i}\` supplied to \`${r}\`. Must be "undefined"`),notNull=(e,i,r)=>null===e[i]&&new Error(`Invalid prop \`${i}\` supplied to \`${r}\`. Must not be "null"`);const propTypeNotRequiredIf=(e,i)=>(r,...o)=>(_isString(e)?r[e]:e(r))?isUndefined(r,...o):i(r,...o);var notRequiredIf=withRequired(propTypeNotRequiredIf),provider=PropTypes.any,index={allOfType:allOfType,component:component,isRequiredIf:isRequiredIf,isRequiredIfNot:isRequiredIfNot,isUndefined:isUndefined,notNull:notNull,notRequiredIf:notRequiredIf,provider:provider,withRequired:withRequired};export default index;

{"version":3,"file":"development.js","sources":["../src/validators.js","../src/fields.js","../src/entities.js","../src/fields-enum.js","../src/index.js"],"sourcesContent":["import _isFunction from 'lodash/isFunction';\nimport { Map } from 'immutable';\n\nexport const allowBlank = () => false;\n\nexport const isRequired = (value, options = {}) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!options.field) throw new Error('entity (Validators.isRequired): \"field\" option is required');\n  }\n\n  return options.field.isBlank(value, options)\n    && 'May not be blank';\n};\n\nexport const entityValid = (value, options = {}) => {\n  const errors = options.field.entity.validate(value, options);\n\n  return !!errors && errors.size > 0 && Map({\n    errors,\n    message: options.field.errorMessage,\n    entityError: true,\n  });\n};\n\nexport const mayNotBeBlank = (value, options = {}) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!options.field) throw new Error('\"field\" option is required when calling \"mayNotBeBlank\"');\n  }\n\n  const validator = options.flag && options.field.flags[options.flag];\n\n  const defaultError = !options.field.blank\n    && isRequired(value, options);\n\n  if (!validator) return defaultError;\n\n  const flagError = validator(value, options);\n\n  return defaultError\n    ? flagError && defaultError\n    : flagError && 'May not be blank';\n};\n\nexport const isRequiredIf = predicate => (value, options) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!_isFunction(predicate)) throw new Error('Validators (isRequiredIf): predicate argument must be of type function');\n  }\n\n  return predicate({ value, ...options }) && isRequired(value, options);\n};\n","import _isString from 'lodash/isString';\nimport moment from 'moment';\nimport { List, Map, fromJS } from 'immutable';\n\nimport { mayNotBeBlank, entityValid } from './validators';\n\nexport class Field {\n  constructor(options = {}) {\n    Object.assign(\n      this,\n      {\n        blank: false,\n        many: false,\n        flags: {},\n        cleaners: [],\n        validators: [],\n        listValidators: [],\n      },\n      options,\n      {\n        defaultValidators: [].concat(\n          (!options.many && (!options.blank || options.flags)) ? [mayNotBeBlank] : [],\n          options.defaultValidators || [],\n        ),\n        defaultListValidators: [].concat(\n          (options.many && (!options.blank || options.flags)) ? [mayNotBeBlank] : [],\n          options.defaultListValidators || [],\n        ),\n      },\n    );\n\n    this.validators = this.preventDefaultValidators\n      ? this.validators\n      : this.defaultValidators.concat(this.validators);\n\n    this.listValidators = this.preventDefaultValidators\n      ? this.listValidators\n      : this.defaultListValidators.concat(this.listValidators);\n  }\n\n  asOptions() {\n    return this.options.map(option => ({\n      value: option,\n      label: this.messages[option],\n    }));\n  }\n\n  asParams(value = null, options) {\n    if (value === null) return undefined;\n\n    const values = this.many ? value : List([value]);\n\n    return values\n      .filterNot((v = null) => v === null)\n      .map(v => this.valueToParam(v, options))\n      .join(',');\n  }\n\n  clean(value, options) {\n    const newOptions = Object.assign({}, options, { field: this });\n\n    return this.cleaners.reduce(\n      (cumm, cleaner) => cleaner(cumm, newOptions),\n      value,\n    );\n  }\n\n  dataToRecord(data = null) {\n    if (List.isList(data)) {\n      return data.map(this.dataToValue.bind(this));\n    }\n\n    return Array.isArray(data)\n      ? List(data.map(this.dataToValue.bind(this)))\n      : this.dataToValue(data);\n  }\n\n  dataToValue(data) { // eslint-disable-line lodash-fp/prefer-identity, class-methods-use-this\n    return data;\n  }\n\n  default() {\n    return this.many ? List() : null;\n  }\n\n  getField({ name } = {}) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (name) throw new Error('entity (field.getField): field type does not support sub field');\n    }\n\n    return name ? null : this;\n  }\n\n  getOptions() {\n    return this.options || List();\n  }\n\n  getValue(value, { name } = {}) { // eslint-disable-line class-methods-use-this\n    if (process.env.NODE_ENV !== 'production') {\n      if (name) throw new Error('entity (field.getValue): field type does not support sub field');\n    }\n\n    return name ? null : value;\n  }\n\n  isBlank(value = null) {\n    return value === null || (\n      this.many\n        ? value.size === 0\n        : value === ''\n    );\n  }\n\n  isValid(value, options) {\n    return this.validate(value, options).size === 0;\n  }\n\n  optionToString(option) {\n    return this.messages[option] || '';\n  }\n\n  recordToData(record) {\n    if (this.local) return undefined;\n\n    return List.isList(record)\n      ? record.map(this.valueToData.bind(this)).toArray()\n      : this.valueToData(record);\n  }\n\n  toString(value = null) { // eslint-disable-line class-methods-use-this\n    return value === null\n      ? ''\n      : value.toString();\n  }\n\n  validate(value, options) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.many && !List.isList(value)) throw new Error('Entity(validate): \"value\" must be an \"Immutable List\" with field option \"many\"');\n    }\n\n    const validateValue = (val, validators) => List(validators)\n      .flatMap((validator) => {\n        const errors = validator(val, Object.assign({}, options, { field: this }));\n        const errorList = List.isList(errors) ? errors : List([errors]);\n\n        return errorList\n          .filter(error => error)\n          .map((error) => {\n            if (_isString(error)) return Map({ message: error });\n            if (error === true) return Map({ message: 'Unidentified Error' });\n\n            if (process.env.NODE_ENV !== 'production') {\n              if (!Map.isMap(error)) throw new Error(`entity: Received error which is neither a \"boolean\" nor a \"string\" nor a \"Map\". Check the validators used in field with entity ${this.name}`);\n            }\n\n            return error;\n          });\n      });\n\n    const errors = validateValue(value, this.many ? this.listValidators : this.validators);\n\n    if (this.many) {\n      const nestedErrors = value && value.map(v => validateValue(v, this.validators));\n\n      return nestedErrors && nestedErrors.every(err => err.size === 0)\n        ? errors\n        : errors.push(Map({\n          listError: true,\n          message: this.errorListMessage,\n          errors: nestedErrors,\n        }));\n    }\n\n    return errors;\n  }\n\n  valueToParam(value = null) {\n    if (value === null) return undefined;\n\n    return this.toString(value);\n  }\n\n  valueToData(value) { // eslint-disable-line lodash-fp/prefer-identity, class-methods-use-this\n    return value;\n  }\n}\n\nexport class AnyField extends Field {\n  dataToValue(data = null) { // eslint-disable-line class-methods-use-this\n    return fromJS(data);\n  }\n\n  valueToData(value) { // eslint-disable-line class-methods-use-this\n    return (List.isList(value) || Map.isMap(value))\n      ? value.toJS()\n      : value;\n  }\n}\n\nexport class IdField extends AnyField {\n  constructor(options = {}) {\n    super(options);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (options.many) throw new Error('\"many\" option is not supported for \"IdField\"');\n    }\n  }\n\n  default() { // eslint-disable-line class-methods-use-this\n    return undefined;\n  }\n}\n\nexport class TextField extends AnyField {\n  static type = 'text';\n\n  default() {\n    return this.many ? List() : '';\n  }\n}\n\nexport class BooleanField extends AnyField {\n  static type = 'boolean';\n}\n\nexport class CharField extends TextField {\n  static type = 'char';\n}\n\nexport class DateField extends AnyField {\n  static type = 'date';\n\n  constructor(options) {\n    const newOptions = Object.assign(\n      {\n        dateFormat: 'YYYY-MM-DD',\n        allowTime: false,\n      },\n      options,\n    );\n\n    super(newOptions);\n  }\n\n  dataToValue(data = null) { // eslint-disable-line class-methods-use-this\n    return data && moment(data);\n  }\n\n  toString(value = null) {\n    return value === null\n      ? ''\n      : value.format(this.dateFormat);\n  }\n\n  valueToData(data) {\n    return data && this.toString(data);\n  }\n}\n\nexport class DateTimeField extends DateField {\n  constructor(options) {\n    const newOptions = Object.assign(\n      {\n        dateFormat: 'YYYY-MM-DD HH:mm',\n        allowTime: true,\n      },\n      options,\n    );\n\n    super(newOptions);\n  }\n}\n\nexport class NumberField extends AnyField { }\n\nexport class IntegerField extends NumberField {\n  dataToValue(data = null) { // eslint-disable-line class-methods-use-this\n    const value = parseInt(data, 10);\n\n    return Number.isNaN(value) ? null : value;\n  }\n}\n\n// TODO add default clean to remove fields not in entity\nexport class EntityField extends AnyField {\n  static type = 'entity';\n\n  constructor(options = {}) {\n    super(Object.assign(\n      {},\n      options,\n      !options.preventEntityValidators && {\n        defaultValidators: [entityValid].concat(options.defaultValidators || []),\n      },\n    ));\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!options.entity) throw new Error('\\'entity\\' option is required when extending EntityField');\n    }\n  }\n\n  dataToValue(data) {\n    return this.entity.dataToRecord(data);\n  }\n\n  default() {\n    if (this.many) return List();\n\n    return this.blank ? null : this.entity.dataToRecord({});\n  }\n\n  // TODO remove name as being an array?\n  getField({ name } = {}) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (Array.isArray(name)) {\n        if (name.length === 0) throw new Error('entity (field.getField): \"name\" option cannot be an empty array');\n        if (name.some(n => !this.entity.fields[n])) throw new Error(`entity (field.getField): \"name\" ${name} contains name not describe in entity`);\n      } else if (name !== undefined) {\n        if (!_isString(name)) throw new Error(`entity (field.getField): \"name\" ${name} option must be either a string or an array of string`);\n        if (!this.entity.fields[name]) throw new Error(`entity (field.getField): field \"${name}\" not found`);\n      }\n    }\n\n    return name && !Array.isArray(name)\n      ? this.entity.fields[name]\n      : this;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getFilterParams() {\n    return Map();\n  }\n\n  getValue(record = null, { name } = {}) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (Array.isArray(name)) {\n        if (name.length === 0) throw new Error('entity (field.getField): \"name\" argument cannot be an empty array');\n        if (name.some(n => !this.entity.fields[n])) throw new Error(`entity (field.getField): \"name\" ${name} contains name not describe in entity`);\n      } else if (name !== undefined && name !== null) {\n        if (!_isString(name)) throw new Error(`entity (field.getField): \"name\" ${name} must be either a string or an array of string`);\n        if (!this.entity.fields[name]) throw new Error(`entity (field.getField): field \"${name}\" not found`);\n      }\n    }\n\n    if (Array.isArray(name)) {\n      const fields = name.filter(n => n in this.entity.fields);\n\n      return record && record.filter((_, key) => fields.includes(key));\n    }\n\n    return name && record\n      ? record.get(name)\n      : record;\n  }\n\n  getOptions() {\n    return this.options || this.entity.options || List();\n  }\n\n  toString(value = null) {\n    return value === null\n      ? ''\n      : this.entity.toString(value);\n  }\n\n  toStringOrdered(value = null) {\n    return value === null\n      ? ''\n      : this.entity.toStringOrdered(value);\n  }\n\n  valueToData(value) {\n    return this.entity.recordToData(value);\n  }\n\n  valueToParam(value = null) {\n    return value === null\n      ? undefined\n      : value.get(this.entity.idField);\n  }\n}\n\nexport class EntityIdField extends EntityField {\n  static type = 'entityid';\n\n  constructor(options = {}) {\n    super({\n      ...options,\n      preventEntityValidators: true,\n    });\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!options.entity) throw new Error('entity option is required when extending EntityIdField');\n    }\n  }\n\n  dataToValue(data = null) { // eslint-disable-line class-methods-use-this\n    return fromJS(data);\n  }\n\n  default() { // eslint-disable-line class-methods-use-this\n    return undefined;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getFilterParamsId() {\n    return Map();\n  }\n\n  valueToData(value) { // eslint-disable-line lodash-fp/prefer-identity, class-methods-use-this\n    return value;\n  }\n\n  valueToParam(value = null) {\n    if (value === null) return undefined;\n\n    return this.toString(value);\n  }\n}\n","import _isFunction from 'lodash/isFunction';\nimport _mapValues from 'lodash/fp/mapValues';\nimport _omitBy from 'lodash/fp/omitBy';\nimport _omit from 'lodash/fp/omit';\nimport _pick from 'lodash/fp/pick';\nimport _compose from 'lodash/fp/compose';\nimport qs from 'query-string';\nimport moment from 'moment';\nimport { Map, fromJS } from 'immutable';\nimport settings from 'settings';\n\nimport * as Fields from './fields';\n\nexport class Entity {\n  static idField = 'uuid';\n\n  static urlBase = '';\n\n  static fields = {};\n\n  static cleaners = [];\n\n  static clean(record, options) {\n    const newOptions = Object.assign({}, options, { entity: this });\n\n    return this.cleaners.reduce(\n      (cumm, cleaner) => cleaner(cumm, newOptions),\n      record,\n    );\n  }\n\n  // TODO go though map?\n  static dataToRecord(data = null) {\n    if (Map.isMap(data)) return data;\n\n    const getDefaultFromField = field => (\n      _isFunction(field.default)\n        ? field.default({ data, field })\n        : field.default\n    );\n\n    const addDefaults = filteredData => _compose(\n      defaults => Object.assign({}, defaults, filteredData),\n      _mapValues(getDefaultFromField),\n      _omit(Object.keys(filteredData)),\n    )(this.fields);\n\n    const dataToValue = filteredData => _compose(\n      _mapValues.convert({ cap: false })(\n        (field, key) => field.dataToRecord(filteredData[key], { data }),\n      ),\n      _pick(Object.keys(filteredData)),\n    )(this.fields);\n\n    return data && _compose(\n      fromJS,\n      addDefaults,\n      dataToValue,\n      _omitBy(value => value === undefined),\n      _pick(Object.keys(this.fields)),\n    )(data);\n  }\n\n  static getId(record, { name } = {}) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (name && !(this.fields[name] instanceof Fields.EntityField)) throw new Error(`entity (getId): The field for name \"${name}\" must be an instance of EntityField`);\n    }\n\n    return name\n      ? record && this.fields[name].entity.getId(record.get(name))\n      : record?.get(this.idField);\n  }\n\n  static getExportUrl(params) {\n    const paramMap = params.remove('page').remove('page_size').filter(p => p) || Map();\n\n    return `${settings.BASE_API_URL}${this.apiBase}?${qs.stringify(paramMap.toJS())}&format=xlsx`;\n  }\n\n  static isEntity(maybeEntity) {\n    return !!maybeEntity && maybeEntity.prototype instanceof Entity;\n  }\n\n  static isEntityDescendant(maybeDescendant) {\n    return !!maybeDescendant && maybeDescendant.prototype instanceof this;\n  }\n\n  static isFieldBlank(record, { name, mapProps = {}, ...option }) {\n    const newName = mapProps[name] || name;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(newName in this.fields)) throw new Error(`name '${newName}' must be a field in entity '${this.name}' when calling isFieldBlank`);\n    }\n\n    return record && this.fields[newName].isBlank(record.get(newName), option);\n  }\n\n  static isFieldBlankEvery(record, { names, mapProps = {}, ...option }) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!Array.isArray(names)) throw new Error(`names '${names}' must be of type array when calling \"isFieldBlankSome\" for entity '${this.name}'`);\n      if (names.some(n => !this.fields[n])) throw new Error(`entity (isFieldBlankEvery): \"names\" ${names} contains name not describe in entity`);\n    }\n\n    const newNames = names.map(n => mapProps[n] || n);\n\n    return record && newNames.every(name => this.fields[name].isBlank(record.get(name), option));\n  }\n\n  static isFieldBlankSome(record, { names, mapProps = {}, ...option }) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!Array.isArray(names)) throw new Error(`names '${names}' must be of type array when calling \"isFieldBlankSome\" for entity '${this.name}'`);\n      if (names.some(n => !this.fields[n])) throw new Error(`entity (isFieldBlankSome): \"names\" ${names} contains name not describe in entity`);\n    }\n\n    const newNames = names.map(n => mapProps[n] || n);\n\n    return record && newNames.some(name => this.fields[name].isBlank(record.get(name), option));\n  }\n\n  static isValid(value, options) {\n    return this.validate(value, options).size === 0;\n  }\n\n  static optionToString(option) {\n    return this.toString(fromJS(option));\n  }\n\n  static recordToData(record) {\n    if (!Map.isMap(record)) return record;\n\n    return record\n      .filter((_, key) => key in this.fields)\n      .map((value, key) => this.fields[key].recordToData(value))\n      .toObject();\n  }\n\n  // will be deprecated ?\n  static select(record, options) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!options) throw new Error('options as a 2nd argument is required when using Entity.select');\n      if (!options.name || (Array.isArray(options.name) && options.name.length === 0)) throw new Error('\\'name\\' option is required when using Entity.select');\n    }\n\n    if (Array.isArray(options.name)) {\n      const fields = options.name.filter(n => n in this.fields);\n\n      return record && record.filter((_, key) => fields.includes(key));\n    }\n\n    return record && record.get(options.name);\n  }\n\n  static toEntityField(options) {\n    return new Fields.EntityField(Object.assign(\n      { entity: this },\n      options,\n    ));\n  }\n\n  static toLink(record) {\n    return `${this.urlBase}${this.getId(record)}`;\n  }\n\n  static toString(record) {\n    return (record || Map()).get(this.idField, '');\n  }\n\n  static toStringOrdered(record) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!this.fields.order) throw new Error(`entity (toStringOrdered): Your entity ${this.name} must contain the \"order\" field`);\n    }\n\n    return record\n      ? `${record.get('order') + 1}. ${this.toString(record)}`\n      : '';\n  }\n\n  static validate(record, options = {}) {\n    return record && Map(options.fields ? _pick(options.fields)(this.fields) : this.fields)\n      .map((field, name) => field.validate(\n        record.get(name),\n        Object.assign({}, _omit(['fields'])(options), { record, field, name, formEntity: this }),\n      ))\n      .filterNot(errors => errors.size === 0);\n  }\n}\n\n// TODO add temp uuid\nexport class BaseEntity extends Entity {\n  static name = 'BaseEntity';\n\n  static actionArchive(record) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!record) throw new Error(`'record' must be set when calling actionArchive on entity ${this.name}`);\n    }\n\n    return record.set('is_archived', true);\n  }\n\n  static actionArrayDeleteAtIndex(records, { index = null } = {}) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!records) throw new Error(`'records' must be set when calling actionArrayDeleteAtIndex on entity ${this.name}`);\n      if (index === null) throw new Error(`'index' option must be set when calling actionArrayDeleteAtIndex on entity ${this.name}`);\n    }\n\n    return records.delete(index);\n  }\n\n  static actionArrayDeleteAtIndexOrdered(records, options) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!this.fields.order) throw new Error(`Entity (actionArrayDeleteAtIndexOrdered): Entity ${this.name} must have a field order`);\n    }\n\n    return this.actionArrayDeleteAtIndex(records, options)\n      .map((record, i) => record.set('order', i));\n  }\n\n  static actionArrayMoveAtIndex(records, { index = null, indexTo = null } = {}) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!records) throw new Error(`'records' must be set when calling actionArrayMoveAtIndex on entity ${this.name}`);\n      if (index === null) throw new Error(`'index' option must be set when calling actionArrayMoveAtIndex on entity ${this.name}`);\n      if (indexTo === null) throw new Error(`'indexTo' option must be set when calling actionArrayMoveAtIndex on entity ${this.name}`);\n    }\n\n    return records.delete(index).insert(indexTo, records.get(index));\n  }\n\n\n  static actionArrayMoveAtIndexOrdered(records, options) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!this.fields.order) throw new Error(`Entity (actionArrayDeleteAtIndexOrdered): Entity ${this.name} must have a field order`);\n    }\n\n    return this.actionArrayMoveAtIndex(records, options)\n      .map((record, i) => record.set('order', i));\n  }\n\n  static actionComplete(record) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!record) throw new Error(`BaseEntity (actionComplete): 'record' must be set. Ref: entity ${this.name}`);\n      if (!this.fields.completed) throw new Error(`BaseEntity (actionComplete): entity ${this.name} must contain a field \"completed\"`);\n    }\n\n    return record.set('completed', true);\n  }\n\n  static actionReset(record) {\n    return this.dataToRecord({\n      [this.idField]: record.get(this.idField),\n    });\n  }\n\n  static actionSave(record) {\n    return this.duck.save(record, { invalidateList: true });\n  }\n\n  static actionSubmit(record) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!record) throw new Error(`BaseEntity (actionSubmit): 'record' must be set. Ref: entity ${this.name}`);\n    }\n\n    return record.set('is_draft', false);\n  }\n\n  static isOverdue(record) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!record) throw new Error(`BaseEntity (actionComplete): 'record' must be set. Ref: entity ${this.name}`);\n      if (!this.fields.due_date) throw new Error(`BaseEntity (actionComplete): entity ${this.name} must contain a field \"due_date\"`);\n      if (!this.fields.is_draft) throw new Error(`BaseEntity (actionComplete): entity ${this.name} must contain a field \"is_draft\"`);\n    }\n\n    return record.get('is_draft') && record.get('due_date').isBefore(moment(), 'day');\n  }\n}\n\nexport class FilterEntity extends BaseEntity {\n  static name = 'FilterEntity';\n\n  static fields = {\n    page: new Fields.IntegerField({ default: 1 }),\n    page_size: new Fields.IntegerField({ default: 20 }),\n  };\n\n  static asParams(record, options) {\n    return (record || Map())\n      .filter((value, key) => key in this.fields)\n      .filterNot((value, key) => this.fields[key].local)\n      .map((value, key) => this.fields[key].asParams(value, options))\n      .flatten();\n  }\n}\n\nexport class TitleEntity extends BaseEntity {\n  static name = 'TitleEntity';\n\n  static fields = {\n    uuid: new Fields.IdField({ blank: true }),\n    title: new Fields.CharField(),\n    title_short: new Fields.CharField({ blank: true }),\n    is_archived: new Fields.BooleanField({ default: false }),\n  };\n\n  static toString(record) {\n    return (record || Map()).get('title', '');\n  }\n}\n\nexport class EnumEntity extends BaseEntity {\n  static idField = 'value';\n\n  static fields = {\n    value: new Fields.CharField(),\n    label: new Fields.CharField(),\n  };\n\n  static toString(record) {\n    return record.get('label');\n  }\n}\n","import { List } from 'immutable';\n\nimport { EnumEntity } from './entities';\nimport { EntityField } from './fields';\n\nexport default class EnumField extends EntityField {\n  constructor(options) {\n    super(Object.assign(\n      { entity: EnumEntity },\n      options,\n    ));\n  }\n\n  dataToValue(data = null) {\n    return data && this.getOptions().find(option => this.entity.getId(option) === data);\n  }\n\n  default() {\n    return this.many ? List() : null;\n  }\n\n  isEnumActive(value, { name }) {\n    return this.many\n      ? value.some(v => v.get('value') === name)\n      : !!value && value.get('value') === name;\n  }\n\n  valueToData(value = null) {\n    return value && this.entity.getId(value);\n  }\n\n  valueToParam(value = null) {\n    return value === null\n      ? undefined\n      : this.entity.getId(value);\n  }\n}\n","import * as AllFields from './fields';\nimport * as AllValidators from './validators';\nimport EnumField from './fields-enum';\n\nexport * from './entities';\nexport const Fields = Object.assign({ EnumField }, AllFields);\nexport const Validators = AllValidators;\n"],"names":["allowBlank","isRequired","value","options","process","env","NODE_ENV","field","Error","isBlank","entityValid","errors","entity","validate","size","Map","message","errorMessage","entityError","mayNotBeBlank","validator","flag","flags","defaultError","blank","flagError","isRequiredIf","predicate","_isFunction","Field","constructor","Object","assign","many","cleaners","validators","listValidators","defaultValidators","concat","defaultListValidators","preventDefaultValidators","asOptions","map","option","label","messages","asParams","undefined","values","List","filterNot","v","valueToParam","join","clean","newOptions","reduce","cumm","cleaner","dataToRecord","data","isList","dataToValue","bind","Array","isArray","default","getField","name","getOptions","getValue","isValid","optionToString","recordToData","record","local","valueToData","toArray","toString","validateValue","val","flatMap","errorList","filter","error","_isString","isMap","nestedErrors","every","err","push","listError","errorListMessage","AnyField","fromJS","toJS","IdField","TextField","BooleanField","CharField","DateField","dateFormat","allowTime","moment","format","DateTimeField","NumberField","IntegerField","parseInt","Number","isNaN","EntityField","preventEntityValidators","length","some","n","fields","getFilterParams","_","key","includes","get","toStringOrdered","idField","EntityIdField","getFilterParamsId","Entity","getDefaultFromField","addDefaults","filteredData","_compose","defaults","_mapValues","_omit","keys","convert","cap","_pick","_omitBy","getId","Fields","getExportUrl","params","paramMap","remove","p","settings","BASE_API_URL","apiBase","qs","stringify","isEntity","maybeEntity","prototype","isEntityDescendant","maybeDescendant","isFieldBlank","mapProps","newName","isFieldBlankEvery","names","newNames","isFieldBlankSome","toObject","select","toEntityField","toLink","urlBase","order","formEntity","BaseEntity","actionArchive","set","actionArrayDeleteAtIndex","records","index","delete","actionArrayDeleteAtIndexOrdered","i","actionArrayMoveAtIndex","indexTo","insert","actionArrayMoveAtIndexOrdered","actionComplete","completed","actionReset","actionSave","duck","save","invalidateList","actionSubmit","isOverdue","due_date","is_draft","isBefore","FilterEntity","flatten","page","page_size","TitleEntity","uuid","title","title_short","is_archived","EnumEntity","EnumField","find","isEnumActive","AllFields","Validators","AllValidators"],"mappings":"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"}
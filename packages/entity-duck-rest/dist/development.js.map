{"version":3,"file":"development.js","sources":["../src/utils.js","../src/reducer-clear.js","../src/reducer-get.js","../src/reducer-options.js","../src/reducer-save.js","../src/reducer-delete.js","../src/index.js"],"sourcesContent":["import { fromJS } from 'immutable';\nimport { stringify } from 'query-string';\n\nexport const getIdentifier = ({ id = '', tag = '', params, method, action, useId }) => {\n  if (useId && id !== '') {\n    return id === null ? 'id_null' : id;\n  }\n\n  // TODO add check for params\n  const paramsString = stringify(params && params.filter(p => p).toJS());\n\n  const paramsFrag = paramsString && `.${paramsString}`;\n  const actionFrag = action ? `.${action}` : '';\n  const tagFrag = tag ? `.${tag}` : '';\n  const idFrag = id === null ? '.id_null' : `.${id}`;\n\n  return `${method}${actionFrag}${tagFrag}${idFrag}${paramsFrag}`;\n};\n\nexport const parseError = (error) => {\n  const obj = {\n    status: error.response.status,\n    nonFieldErrors: [],\n    errors: {},\n  };\n\n  if (error.response.status === 0) {\n    obj.nonFieldErrors = ['A fatal error occurred.'];\n  } else if (error.response.status === 401 || error.response.status === 403) {\n    obj.nonFieldErrors = [error.response.data.detail || error.response.data];\n  } else if (error.response.status === 404) {\n    obj.nonFieldErrors = ['Not found.'];\n  } else if (error.response.status >= 500 && error.response.status < 600) {\n    obj.nonFieldErrors = ['A server error occurred.'];\n  } else if (error.response.data.non_field_errors) {\n    obj.nonFieldErrors = error.response.data.non_field_errors;\n  } else {\n    obj.errors = error.response.data;\n  }\n\n  return fromJS(obj);\n};\n","import { getIdentifier } from './utils';\n\n// TODO might need to use idIdenfier?\nexport default (types, initialState) => ({\n  [types.clear]: (state, action) => {\n    const identifier = getIdentifier(action.meta);\n\n    return action.meta.dirty\n      ? state.setIn(['detail_dirty', identifier], state.getIn(['detail', identifier]))\n      : state.withMutations(\n        s => s\n          .setIn(['detail', identifier], initialState.getIn(['detail', identifier]))\n          .setIn(['detail_dirty', identifier], initialState.getIn(['detail', identifier])),\n      );\n  },\n});\n","import { fromJS } from 'immutable';\n\nimport { getIdentifier } from './utils';\n\nconst getDataFactory = (payload, entity) => entity.dataToRecord(payload);\n\nconst listDataFactory = (payload, entity) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!entity.paginated && !Array.isArray(payload)) throw new Error(`entity-duck: list data received for entity \"${entity.name}\" is not an array. Could the endpoint be paginated?`);\n    if (entity.paginated && Array.isArray(payload)) throw new Error(`entity-duck: list data received for entity \"${entity.name}\" is an array. Could the endpoint not be paginated?`);\n  }\n\n  return entity.paginated\n    ? fromJS({\n      ...payload,\n      count: parseInt(payload.count, 10),\n      results: payload.results.map(data => entity.dataToRecord(data)),\n    })\n    : payload.map(data => entity.dataToRecord(data));\n};\n\n// TODO remove list_dirty?\nexport default types => ({\n  [types.get]: (state, action) => {\n    const identifier = getIdentifier(action.meta);\n\n    return state.withMutations(\n      s => s\n        .setIn(['errors', identifier], undefined)\n        .setIn(['status', 'getting', identifier], true)\n        .setIn(['status', 'gettingDidFail', identifier], false),\n    );\n  },\n\n  [types.get_resolved]: (state, action) => {\n    const identifier = getIdentifier(action.meta);\n    const dataFactory = action.meta.id ? getDataFactory : listDataFactory;\n\n    return state.withMutations(\n      s => s\n        .updateIn(\n          action.meta.id\n            ? ['detail', action.meta.id]\n            : ['list', identifier],\n          result => (\n            action.meta.skipStore\n              ? result\n              : fromJS(dataFactory(action.payload, action.meta.entity))\n          ),\n        )\n        .updateIn(\n          action.meta.id\n            ? ['detail_dirty', action.meta.id]\n            : ['list_dirty', identifier],\n          result => (\n            action.meta.skipStore\n              ? result\n              : fromJS(dataFactory(action.payload, action.meta.entity))\n          ),\n        )\n        .setIn(['status', 'getting', identifier], false),\n    );\n  },\n\n  [types.get_rejected]: (state, action) => {\n    const identifier = getIdentifier(action.meta);\n\n    // TODO add option to flush on fail\n    return state.withMutations(\n      s => s\n        .setIn(['errors', identifier], action.payload)\n        .setIn(['status', 'getting', identifier], false)\n        .setIn(['status', 'gettingDidFail', identifier], true),\n    );\n  },\n});\n","import { fromJS } from 'immutable';\n\nimport { getIdentifier, parseError } from './utils';\n\nexport default types => ({\n  [types.options]: (state, action) => {\n    const identifier = getIdentifier(action.meta);\n\n    return state.withMutations(\n      s => s\n        .setIn(['status', 'optioning', identifier], true)\n        .setIn(['status', 'optioningDidFail', identifier], false),\n    );\n  },\n\n  [types.options_resolved]: (state, action) => {\n    const identifier = getIdentifier(action.meta);\n\n    return state.withMutations(\n      s => s\n        .setIn(['errors', identifier], null)\n        .setIn(['options', identifier], fromJS(action.payload))\n        .setIn(['status', 'optioning', identifier], false),\n    );\n  },\n\n  [types.options_rejected]: (state, action) => {\n    const identifier = getIdentifier(action.meta);\n\n    return state.withMutations(\n      s => s\n        .setIn(['errors', identifier], parseError(action.payload))\n        .setIn(['status', 'optioning', identifier], false)\n        .setIn(['status', 'optioningDidFail', identifier], true),\n    );\n  },\n});\n","import { getIdentifier, parseError } from './utils';\n\n// TODO maybe have save_local instead of save with dirty params. so that it can be easily identified in redux devtool\nexport default (types, initialState) => ({\n  [types.save]: (state, action) => {\n    const identifier = getIdentifier(action.meta);\n    const idIdentifier = getIdentifier({ ...action.meta, useId: true });\n\n    return state.withMutations(\n      s => s\n        .updateIn(['detail_dirty', idIdentifier], detail => (\n          action.meta.dirty\n            ? action.payload\n            : detail\n        ))\n        .setIn(['status', 'saving', identifier], true)\n        .setIn(['status', 'savingDidFail', identifier], false),\n    );\n  },\n\n  // TODO also set record for new uuid if id was null\n  [types.save_resolved]: (state, action) => {\n    const identifier = getIdentifier(action.meta);\n    const idIdentifier = getIdentifier({ ...action.meta, useId: true });\n\n    const record = action.meta.entity.dataToRecord(action.payload);\n    console.log('idIdentifier', idIdentifier, action);\n\n    return state.withMutations(\n      s => s\n        .updateIn(['detail', idIdentifier], detail => (\n          action.meta.skipStore\n            ? detail\n            : record\n        ))\n        .setIn(\n          ['detail_dirty', idIdentifier],\n          action.meta.skipStore\n            ? state.getIn(['detail', idIdentifier])\n            : record,\n        )\n        .setIn(['errors', identifier], null)\n        .setIn(['status', 'saving', identifier], false)\n        .update('list', list => (action.meta.invalidateList ? initialState.get('list') : list))\n        .update('list_dirty', list => (action.meta.invalidateList ? initialState.get('list_dirty') : list)),\n    );\n  },\n\n  [types.save_rejected]: (state, action) => {\n    const identifier = getIdentifier(action.meta);\n\n    return state.withMutations(\n      s => s\n        .setIn(['errors', identifier], parseError(action.payload))\n        .setIn(['status', 'saving', identifier], false)\n        .setIn(['status', 'savingDidFail', identifier], true),\n    );\n  },\n});\n","import { getIdentifier, parseError } from './utils';\n\nexport default (types, initialState) => ({\n  [types.delete]: (state, action) => {\n    const identifier = getIdentifier(action.meta);\n\n    return state.withMutations(\n      s => s\n        .setIn(['status', 'deleting', identifier], true)\n        .setIn(['status', 'deletingDidFail', identifier], false),\n    );\n  },\n\n  [types.delete_resolved]: (state, action) => {\n    const identifier = getIdentifier(action.meta);\n    const idIdentifier = getIdentifier({ ...action.meta, useId: true });\n\n    return state.withMutations(\n      s => s\n        .deleteIn(['detail', idIdentifier])\n        .deleteIn(['detail_dirty', idIdentifier])\n        .setIn(['errors', identifier], null)\n        .setIn(['status', 'deleting', identifier], false)\n        .update('list', list => (action.meta.invalidateList ? initialState.get('list') : list))\n        .update('list_dirty', list => (action.meta.invalidateList ? initialState.get('list_dirty') : list)),\n    );\n  },\n\n  [types.delete_rejected]: (state, action) => {\n    const identifier = getIdentifier(action.meta);\n\n    return state.withMutations(\n      s => s\n        .setIn(['errors', identifier], parseError(action.payload))\n        .setIn(['status', 'deleting', identifier], false)\n        .setIn(['status', 'deletingDidFail', identifier], true),\n    );\n  },\n});\n","import { Duck } from '@gnowth/entity-duck';\nimport { List, Map } from 'immutable';\n\nimport reducerClear from './reducer-clear';\nimport reducerGet from './reducer-get';\nimport reducerOptions from './reducer-options';\nimport reducerSave from './reducer-save';\nimport reducerDelete from './reducer-delete';\nimport { getIdentifier } from './utils';\n\nexport default class EntityDuck extends Duck {\n  static namespace = 'entities';\n\n  static actions = {\n    clear: Duck.createAction(),\n\n    delete_rejected: Duck.createAction(),\n    delete_resolved: Duck.createAction(),\n    delete: Duck.createAction({\n      defaultMeta: ({ entity, payload }) => ({\n        id: entity.getId(payload),\n        keyProcessing: 'deleting',\n        keyProcessingDidFail: 'deletingDidFail',\n        method: 'delete',\n        params: Map(),\n        useEntityMiddleware: true,\n      }),\n    }),\n\n    get_rejected: Duck.createAction(),\n    get_resolved: Duck.createAction(),\n    get: Duck.createAction({\n      defaultMeta: ({ payload }) => ({\n        keyClear: 'clear',\n        keyPagination: 'pagination',\n        keyProcessing: 'getting',\n        keyProcessingDidFail: 'gettingDidFail',\n        keyRecord: 'record',\n        keySave: 'save',\n        keyStatus: 'status',\n        method: 'get',\n        params: Map(),\n        useEntityMiddleware: payload.id !== null,\n      }),\n      meta: ({ payload }) => payload,\n      payload: () => undefined,\n    }),\n\n    options_rejected: Duck.createAction(),\n    options_resolved: Duck.createAction(),\n    options: Duck.createAction({\n      defaultMeta: {\n        method: 'options',\n        params: Map(),\n        useEntityMiddleware: true,\n      },\n      meta: ({ payload }) => payload,\n      payload: () => undefined,\n    }),\n\n    // TODO it does not allow creating multiple new\n    save_rejected: Duck.createAction(),\n    save_resolved: Duck.createAction(),\n    save: Duck.createAction({\n      defaultMeta: ({ entity, payload, options = {} }) => ({\n        id: entity.getId(payload) || null, // TODO rethink. starting to get too hacky\n        keyProcessing: 'saving',\n        keyProcessingDidFail: 'savingDidFail',\n        method: entity.getId(payload) ? 'put' : 'post',\n        params: Map(),\n        useEntityMiddleware: !options.dirty,\n      }),\n    }),\n  };\n\n  static getInitialState({ entity }) {\n    const initialRecord = entity.dataToRecord({});\n\n    return Map({\n      detail: Map({ [getIdentifier({ id: null, useId: true })]: initialRecord }),\n      detail_dirty: Map({ [getIdentifier({ id: null, useId: true })]: initialRecord }),\n      errors: Map(),\n      list: Map(),\n      list_dirty: Map(),\n      options: Map(),\n      status: Map({\n        deleting: Map(),\n        deletingDidFail: Map(),\n        getting: Map(),\n        gettingDidFail: Map(),\n        optioning: Map(),\n        optioningDidFail: Map(),\n        saving: Map(),\n        savingDidFail: Map(),\n      }),\n    });\n  }\n\n  static getReducers(types, initialState) {\n    return {\n      ...reducerClear(types, initialState),\n      ...reducerGet(types, initialState),\n      ...reducerOptions(types, initialState),\n      ...reducerSave(types, initialState),\n      ...reducerDelete(types, initialState),\n    };\n  }\n\n  constructor(options) {\n    super(options);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!options.entity.apiBase) throw new Error('entities-duck: \"entity\" option must have an \"apiBase\"');\n      if (!/^\\/.*\\/$/.test(options.entity.apiBase)) throw new Error('entities-duck: \"apiBase\" of \"entity\" option must start with a \"/\" and end with a \"/\"');\n    }\n  }\n\n  errors(state, options) {\n    return state.getIn([\n      this.app,\n      this.constructor.namespace,\n      this.entity.name,\n      'errors',\n      getIdentifier(options),\n    ]);\n  }\n\n  // TODO check if result is a list if not paginated\n  record(state, options = {}) {\n    return state.getIn([\n      this.app,\n      this.constructor.namespace,\n      this.entity.name,\n      `${options.id === undefined ? 'list' : 'detail'}${options.dirty ? '_dirty' : ''}`,\n      getIdentifier(Object.assign({ method: 'get', useId: true }, options)),\n      ...(options.id === undefined && this.entity.paginated ? ['results'] : []),\n    ]);\n  }\n\n  // records(state, options) {\n  //   if (process.env.NODE_ENV !== 'production') {\n  //     if (!this.entity.paginated) {\n  //       const results = state.getIn([\n  //         this.app,\n  //         this.constructor.namespace,\n  //         this.entity.name,\n  //         'list',\n  //         getIdentifier(Object.assign({ method: 'get' }, options)),\n  //         ...(this.entity.paginated ? ['results'] : []),\n  //       ]);\n\n  //       if (results && !List.isList(results)) {\n  //         throw new Error(`entities-duck: records for entity \"${this.entity.name}\" must be a List. Did you forget to set \"paginated\" static field to \"true\" in the entity`);\n  //       }\n  //     }\n  //   }\n\n  //   return state.getIn([\n  //     this.app,\n  //     this.constructor.namespace,\n  //     this.entity.name,\n  //     'list',\n  //     getIdentifier(Object.assign({ method: 'get' }, options)),\n  //     ...(this.entity.paginated ? ['results'] : []),\n  //   ]);\n  // }\n\n  meta(state, options) {\n    return state.getIn([\n      this.app,\n      this.constructor.namespace,\n      this.entity.name,\n      'options',\n      getIdentifier(Object.assign({ method: 'options' }, options)),\n    ]);\n  }\n\n  pagination(state, options) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!this.entity.paginated) throw new Error(`entities-duck (paginated): paginated option must be set for entity \"${this.entity.name}\".`);\n    }\n\n    const recordsMap = state.getIn([\n      this.app,\n      this.constructor.namespace,\n      this.entity.name,\n      'list',\n      getIdentifier(Object.assign({ method: 'get' }, options)),\n    ]);\n\n    return recordsMap && recordsMap.remove('results');\n  }\n\n  status(state, options) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!options.status) throw new Error(\"entities-duck: 'status' property is required for status selector\");\n      if (!options.method) throw new Error(\"entities-duck: 'method' property is required for status selector\");\n    }\n\n    return state.getIn(\n      [\n        this.app,\n        this.constructor.namespace,\n        this.entity.name,\n        'status',\n        options.status,\n        getIdentifier(options),\n      ],\n      false,\n    );\n  }\n\n  hasPermissions(state, options) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!options.permissions) {\n        throw new Error('entities-duck: \\'permissions\\' property is required for permission selector');\n      }\n\n      if (!options.method) {\n        throw new Error('entities-duck: \\'method\\' property is required for status selector');\n      }\n    }\n\n    const permissions = state.getIn(\n      [\n        this.app,\n        this.constructor.namespace,\n        this.entity.name,\n        'options',\n        getIdentifier(options),\n        'permissions',\n      ],\n      List(),\n    );\n\n    const requiredPermissions = Array.isArray(options.permissions)\n      ? options.permissions\n      : [options.permissions];\n\n    return !!requiredPermissions.find(permission => permissions.includes(permission));\n  }\n}\n"],"names":["getIdentifier","id","tag","params","method","action","useId","paramsString","stringify","filter","p","toJS","paramsFrag","actionFrag","tagFrag","idFrag","parseError","error","obj","status","response","nonFieldErrors","errors","data","detail","non_field_errors","fromJS","types","initialState","clear","state","identifier","meta","dirty","setIn","getIn","withMutations","s","getDataFactory","payload","entity","dataToRecord","listDataFactory","process","env","NODE_ENV","paginated","Array","isArray","Error","name","count","parseInt","results","map","get","undefined","get_resolved","dataFactory","updateIn","result","skipStore","get_rejected","options","options_resolved","options_rejected","save","idIdentifier","save_resolved","record","console","log","update","list","invalidateList","save_rejected","delete","delete_resolved","deleteIn","delete_rejected","EntityDuck","Duck","getInitialState","initialRecord","Map","detail_dirty","list_dirty","deleting","deletingDidFail","getting","gettingDidFail","optioning","optioningDidFail","saving","savingDidFail","getReducers","reducerClear","reducerGet","reducerOptions","reducerSave","reducerDelete","constructor","apiBase","test","app","namespace","Object","assign","pagination","recordsMap","remove","hasPermissions","permissions","List","requiredPermissions","find","permission","includes","createAction","defaultMeta","getId","keyProcessing","keyProcessingDidFail","useEntityMiddleware","keyClear","keyPagination","keyRecord","keySave","keyStatus"],"mappings":"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"}